<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zss.dao.UserFollowDao">
    <sql id="columns">
        select id, user_id, house_id, create_time, update_time, is_deleted
        from user_follow
    </sql>
   <!--关注 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into user_follow (
            user_id ,
            house_id
        ) values (
                     #{userId} ,
                     #{houseId}
                 )
    </insert>
    <!--Integer getByUserIdAndHouseId(Long userId, Long houseId); -->
    <select id="getByUserIdAndHouseId" resultType="java.lang.Integer">
        select count(id) from user_follow
        where user_id = #{userId} and house_id = #{houseId} and is_deleted = 0
    </select>
    <!--PageInfo<UserFollowVo> findPageList(@Param("userId") Long userId); -->
    <select id="findListPage" resultType="com.zss.vo.UserFollowVo">
        select
        flw.id,
        flw.house_id as houseId,
        flw.create_time as createTime,

        hse.name,
        hse.build_area as buildArea,
        hse.total_price as totalPrice,
        hse.house_type_id as houseTypeId,
        hse.floor_id as floorId,
        hse.direction_id as directionId,
        hse.default_image_url as defaultImageUrl,

        cmty.name as communityName
        from user_follow flw
        left join hse_house hse on hse.id = flw.house_id
        left join hse_community cmty on cmty.id = hse.community_id
        <where>
            user_id = #{userId}
            and flw.is_deleted = 0
            and hse.is_deleted = 0
            and cmty.is_deleted = 0
        </where>
        order by flw.id desc
    </select>


    <update id="update" >
        update user_follow set
        <if test="userId != null and userId != ''">
            user_id = #{userId} ,
        </if>
        <if test="houseId != null and houseId != ''">
            house_id = #{houseId} ,
        </if>
        update_time =  now()
        where
        id = #{id}
    </update>
    <!-- 取消关注 -->
    <update id="delete">
        update user_follow set
             update_time = now() ,
             is_deleted = 1
        where
            id = #{id}
    </update>

    <select id="getById" resultType="UserFollow">
        select <include refid="columns" />
        from user_follow
        where
        id = #{id}
    </select>
</mapper>